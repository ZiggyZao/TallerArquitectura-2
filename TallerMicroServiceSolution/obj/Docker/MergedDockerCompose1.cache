name: dockercompose15846898708010638553
services:
  customerdb:
    container_name: customer-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: 12345678Password*
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "8001"
      protocol: tcp
  customerwebapi:
    build:
      context: C:\Users\cuerv\source\repos\TallerMicroServiceSolution
      dockerfile: CustomerWebApi/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CustomerWebApi
      target: base
    container_name: customer-api
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: customerdb
      DB_NAME: customer
      DB_SA_PASSWORD: 12345678Password*
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: customerwebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/CustomerWebApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8002"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\cuerv\source\repos\TallerMicroServiceSolution\CustomerWebApi
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\source\repos\TallerMicroServiceSolution
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  productdb:
    container_name: product-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345678Password*
    image: mysql:8.0.29-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "8003"
      protocol: tcp
  productwebapi:
    build:
      context: C:\Users\cuerv\source\repos\TallerMicroServiceSolution
      dockerfile: ProductWebApi/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ProductWebApi
      target: base
    container_name: product-api
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: productdb
      DB_NAME: product
      DB_ROOT_PASSWORD: 12345678Password*
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: productwebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/ProductWebApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8004"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\cuerv\source\repos\TallerMicroServiceSolution\ProductWebApi
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\source\repos\TallerMicroServiceSolution
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\cuerv\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
networks:
  backend:
    name: dockercompose15846898708010638553_backend